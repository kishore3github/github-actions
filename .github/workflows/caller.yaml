# .github/workflows/main.yaml
name: Service Deployment Controller

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      mode:
        description: 'Mode of operation'
        required: true
        default: 'sequential'
        type: choice
        options:
          - sequential
          - parallel

jobs:
  read-services:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.read.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install yq and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo snap install yq

      - name: Read services
        id: read
        run: |
          echo "Reading services from services.yaml"
          matrix=$(yq -o=json '.deployments' services.yaml | jq -c)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "$matrix"

  deployments-parallel:
    needs: read-services
    # runs-on: ubuntu-latest
    if: ${{ github.event.inputs.mode == 'parallel' }}
    # env:
      # GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.read-services.outputs.matrix) }}
    uses: kishore3github/github-actions/.github/workflows/deploy-service.yaml@main
    with:
      service: ${{ matrix.service.name }}
      namespace: ${{ matrix.service.namespace }}
      image_tag: ${{ matrix.service.image_tag }}


  deployments-sequential:
    needs: read-services
    if: ${{ github.event.inputs.mode == 'sequential' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy services sequentially
        env:
          MATRIX: ${{ needs.read-services.outputs.matrix }}
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Deploying services sequentially"
          echo "$MATRIX" | jq -c '.[]' | while read service; do
            name=$(echo $service | jq -r '.name')
            namespace=$(echo $service | jq -r '.namespace')
            image_tag=$(echo $service | jq -r '.image_tag')

            echo "Triggering deployment for $name in namespace $namespace with image tag $image_tag"
            gh workflow run deploy-service.yaml -f service="$name" -f namespace="$namespace" -f image_tag="$image_tag"

            echo "Waiting for deployment of $name to complete..."
            # Wait a few seconds to ensure the workflow is registered
            sleep 20

            # Get the latest run ID for the workflow
            run_id=$(gh run list --workflow=deploy-service.yaml --limit=1 --json databaseId --jq '.[0].databaseId')

            # Wait for that run to complete
            gh run watch "$run_id"

            echo "Deployment of $name completed."
            sleep 10
          done


          # echo "Deploying services sequentially"
          # echo "$MATRIX" | jq -c '.[]' | while read service; do
          #   name=$(echo $service | jq -r '.name')
          #   namespace=$(echo $service | jq -r '.namespace')
          #   image_tag=$(echo $service | jq -r '.image_tag')
          #   echo "Deploying $name in namespace $namespace with image tag $image_tag"
          #   gh workflow run deploy-service.yaml -f service="$name" -f namespace="$namespace" -f image_tag="$image_tag"
          #   echo "Deployment of $name in namespace $namespace with image tag $image_tag completed."
          #   sleep 100
          # done
